권한의 역할과 종류
 - SYS : 모든 권한 관리자
             
 1) 사용자 만들기
        관리자(sys, system)에서 만들기

 2) 권한 부여
        권한있는 사용자가 권한 없는 사용자에게 GRANT로 권한 부여★ 
        GRANT 권한내용 TO 사용자명
        [WITH ADMIN OPTION]; 
            - 사용자명에 PUBLIC을 기술하면 모든 사용자에게 해당 시스템 권한이 부여된다.
            - WITH ADMIN OPTION : 부여받은 권한을 다른 사용자에게 부여할 수 있다
	- 관리자의 시스템 권한
	      CREATE USER : 사용자를 생성하는 권한
	      DROP USER : 사용자를 삭제하는 권한
	      DROP ANY TABLE : 임의의 테이블을 삭제할 수 있는 권한
	      QUERY REWRITE : 함수 기반 인덱스를 생성하는 권한
	      BACKUP ANY TABLE : 임의의 테이블을 백업할 수 있는 권한
                  CREATE SESSION : 접속할 권한
	
	- 사용자를 위한 시스템 권한
	      CREATE SESSION : DB에 접속할 수 있는 권한
	      CREATE TABLE : 사용자 스키마에서 테이블을 생성할 수 있는 권한
	      CREATE VIEW : 사용자 스키마에서 뷰를 생성할 수 있는 권한
	      CREATE SEQUENCE : 사용자 스키마에서 시퀀스를 생성할 수 있는 권한
	      CREATE PROCEDURE : 사용자 스키마에서 함수를 생성할 수 있는 권한

 ※ 테이블을 생성하거나 INSERT 할 때 데이터를 기록하려고 하는 
        테이블 스페이스에 권한이 없어서 오류 발생
            TableSpace : 테이블이 저장되는 공간
		         테이블의 데이터를 DELETE하고 Commit해도 
                                     TableSpace의 사용량은 변하지 않음
        ALTER USER 사용자명 QUOTA 50M ON USERS;
            사용자명에게 USERS 테이블스페이스를 50MB 사용할 수 있도록 권한 부여
        GRANT UNLIMITED TABLESPACE TO 사용자명;
            사용자명에게 모든 테이블스페이스에 대한 무제한 사용 권한 부여
        원래 하지 않아도 알아서 부여 되던건데 언제부턴가 바뀜.
        해당 유저에게 어떤 TableSpace에 어느정도 사용권한이 있는지 확인해보고 싶은 경우
            SELECT * FROM USER_TS_QUOTAS;
    
 3) 사용자로 접속하기
        방법1) WINDOWS> SQLPLUS USERNAME / PASSWORD;
        방법2) SQL> CONN USERNAME / PASSWORD;
            접속할 권한이 없으면 오류 발생

 4) 권한을 부여받은 사용자가 권한이 없은 사용자에게 권한 부여
        SYS에게 권한을 부여받을 때 
        GRANT 권한내용 TO 사용자명 WITH ADMIN OPTION;하면
        부여받은 권한을 다른 사용자에게 부여할 수 있다.


객체 권한
 - 특정 객체에 조작을 할 수 있는 권한
 - 객체의 소유자는 객체에 대한 모든 권한을 가진다.
       ALTER : TABLE, SEQUENCE
       DELETE : TABLE, VIEW
       EXECUTE : PROCEDURE
       INDEX : TABLE
       INSERT : TABLE, VIEW
       REFERENCES : TABLE
       SELECT : TABLE, VIEW, SEQUENCE
       UPDATE : TABLE, VIEW

 - GRANT 권한내용 ON 객체명 TO 사용자명
    [WITH GRANT OPTION] : 받은 객체 권한을 다른 사용자에게 부여할 수 있음
                                        2개를 받아서 1개만 넘겨줄 수도 있다.
       시스템 권한과 다른 점은 ON이 추가된다는 점
           ON에는 테이블 객체나 뷰 객체 등을 기술
           단, 권한을 부여 받은 사용자명은 자신의 객체가 아니기 때문에
               항상 객체를 사용할 때 객체명 앞에 객체를 소유한 사용자명을 명시한다.

 - 예시
       사용자1의 테이블을 사용자2가 검색(사용)을 하는 경우
           검색의 권한은 테이블을 가지고 있는 사용자1이 가지고 있다.
           GRANT SELECT ON 테이블명 TO 사용자2;
               SELECT * FROM 사용자1.테이블명;

 - Schema
       객체를 소유한 사용자명을 의미
       평소 스키마는 자신이 소유한 객체를 언급할 때 생략된다.
           SELECT * FROM 테이블명;
       하지만 다른 사용자가 소유한 객체를 언급할 때는 스키마를 명시한다.
           SELECT * FROM 스키마명.테이블명;
		       [사용자명]

권한 조회
    [롤 관련 데이터 사전]
        ROLE_SYS_PRIVS                         ROLE에 부여된 시스템 권한
        ROLE_TAB_PRIVS                         ROLE에 부여된 테이블 권한
        USER_ROLE_PRIVS                       현재 사용자가 ACCESS할 수 있는 ROLE
        USER_TAB_PRIVS_MADE               현재 사용자의 객체에 부여한 객체 권한
        USER_TAB_PRIVS_RECD               현재 사용자의 객체에 부여된 객체 권한
        USER_COL_PRIVS_MADE              현재 사용자 객체의 특정 컬럼에 부여한 객체 권한
        USER_COL_PRIVS_RECD               현재 사용자 객체의 특정 컬럼에 부여된 객체 권한

 - REVOKE
       사용자에게 부여한 객체 권한을 철회하는 명령어
           객체 권한을 준 곳에서 사용
               만약 sys, system에서 사용하려면 객체명 앞에 스키마명을 명시해준다.
       REVOKE 권한내용 ON 객체명 FROM 사용자명
       [CASCADE CONSTRAINTS]
           참조 객체 권한에서 사용 된 무결성 제한을 같이 삭제할 수 있음
       [WITH GRANT OPTION]; 
       사용자명에 PUBLIC을 주면 모든 사용자에게 준 권한을 철회하는 것
           주는건 TO 뺏는건 FROM
       WITH GRANT OPTION : 부여받은 객체 권한을 다른 사용자에게 부여할 수 있음
			     객체 권한을 부여한 사용자의 객체 권한을 철회하면,
		                 권한을 부여받은 사용자가 부여한 객체 권한 또한 
                                         같이 철회되는 종속철회가 발생

롤을 사용한 권한 부여
 - CONNECT 롤
       사용자가 데이터베이스에 접속 가능하도록 하기 위해 
           가장 기본적인 시스템 권한 8가지를 묶어 놓음
       ALTER SESSION, CREATE CLUSTER, CREATE DATABASE LINK, CREATE VIEW,
           CREATE SEQUENCE, CREATE SESSION, CREATE SYNONYM, CREATE TABLE

 - RESOURCE 롤
       사용자가 객체(테이블, 뷰, 인덱스)를 생성할 수 있도록 하기 위해
           시스템 권한을 묶어 놓음
       CREATE CLUSTER, CREATE PROCEDURE, CREATE SEQUENCE,
           CREATE TABLE, CREATE TRIGGER

 - DBA 롤
       사용자들이 소유한 데이터베이스 객체를 관리하고,
           사용자들이 작성하고 변경하고 제거할 수 있도록 하는 모든 권한을 가짐
           즉, 시스템 자원을 무제한적으로 사용하며,
               시스템 관리에 필요한 모든 권한을 부여할 수 있는 강력한 권한을 보유한 롤

 - 롤을 사용하여 권한 부여하기
       GRANT 역할명(롤), ... TO 사용자명;

 - 사용자에게 부여된 역할을 확인하기
       SELECT * FROM dict WHERE table_name LIKE '%ROLE%';

사용자 롤 정의
    1) 롤(역할)을 생성한다.(DB 관리자)
           CREATE ROLE 롤이름;
    2) 롤에 권한을 부여한다.(DB 관리자 or 특정 사용자)
           GRANT 권한내용 TO 롤이름;
               권한내용 : 관리자의 시스템의 권한, 사용자를 위한 시스템 권한
    3) 사용자에게 롤을 부여한다.(DB 관리자)
           GTANT 롤이름 TO 사용자명;


conn / as sysdba

SHOW AUTOCOMMIT;
    현재 autocommit의 상태를 보여줌

SHOW USER
    현재 사용중인(접속한) 계정을 보여줌

