서브쿼리(부조회)
 - 쿼리 안에 있는 또 다른 쿼리
      밖에 있는 쿼리를 메인 쿼리,
      안에 있는 쿼리를 서브 쿼리라고 함

 - ( )안에 작성하면 ( )안에 있는 식부터 처리한다.

 - DML문 모두에서 사용할 수 있음

 - Nesting : 서브쿼리 안에 서브쿼리가 들어가는 것
	      메모리가 허용하는 한 무제한으로 중첩 가능
 
 - 서브쿼리에서 SELECT 하지 않은 컬럼은 메인쿼리에서 사용할 수 없음

 - 서브쿼리의 결과를 가지고 메인쿼리를 실행해서 결과를 얻음

 - 서브쿼리를 쓰면 무조건 성능에 안좋다?
      서브쿼리로 짜든, JOIN으로 풀어서 짜든 
      어떤 것이 유리한지 옵티마이저가 알아서 판단해서 
      실행 계획을 작성하기 때문에 성능과는 무관하다.

 - 서브쿼리를 반드시 쓰면 안되는 경우
      하나의 테이블을 메인쿼리와 서브쿼리에서 여러번 쓰는 경우
      성능이 굉장히 떨어짐
      
WHERE절에 사용하는 중첩 서브쿼리
 - 단일 행 서브쿼리
   · ( ) 결과가 오직 하나의 행을 반환 
   · 메인쿼리의 WHERE절에서는 단일 행 비교 연산자를 사용해야 함
        ※ 단일 행 비교 연산자 : =, >, >=, <, <=, <>

 - 다중 행 서브쿼리
   · ( ) 결과가 여러 개의 행으로 반환
   · 반드시 다중 행 연산자와 함께 사용해야 함
        ※ 다중 행 연산자 : IN, ANY, SOME, ALL, EXISTS
	IN : 서브쿼리 결과와 같은 값을 찾음
	ANY(SOME)
	 - 만족하는 값이 하나만 있으면 된다.(OR)
                 · 1000 > ANY (500, 1000, 2000)
	       1000 > 500 OR 1000 > 1000 OR 1000 > 2000과 동일
	           즉, 나올수 있는 모든 조건에 OR 연산을 수행한 것과 동일
	       ANY 값에 1000보다 작은 500이 있으므로 TRUE
                 · = ANY(SOME) : 서브쿼리 결과 중에서 하나라도 만족하는 값이 있으면 리턴(IN과 동일)
                 · > ANY(SOME) : 서브쿼리 결과 중에서 최대값을 반환
                 · < ANY(SOME) : 서브쿼리 결과 중에서 최대값을 반환

	ALL
             - 모든 값을 만족해야 한다.(AND)
                 · 1000 > ALL (500, 1000, 2000)
	       1000 > 500 AND 1000 > 1000 AND 1000 > 2000과 동일
	          즉, 나올 수 있는 모든 조건에 AND 연산을 수행한 것과 동일
	          1000이 ALL의 모든 값보다 작아야하므로 FALSE
                 · > ALL : 서브쿼리 결과 중에서 최대값을 반환
                 · < ALL : 서브쿼리 결과 중에서 최소값을 반환
	EXISTS : 서브쿼리의 값이 있을 경우 메인쿼리를 수행
	NOT EXISTS : 서브쿼리의 값이 없을 경우 메인쿼리를 수행

 - 서브쿼리로 테이블 생성하기
   · 제약조건은 복제되지 않음
   · 이미 존재하는 테이블과 동일한 구조와 내용을 갖는 새로운 테이블 생성
	CREATE TABLE 복제테이블명 AS SELECT * FROM 원본테이블명;
   · 이미 존재하는 테이블과 동일한 구조와 필요한 컬럼만 갖는 새로운 테이블 생성
	CREATE TABLE 복제테이블명 AS SELECT 필요한컬럼명 FROM 원본테이블명;
   · 조건에 일치하는 내용만 갖는 새로운 테이블 생성
	CREATE TABLE 복제테이블명 AS SELECT * 원본테이블명 WHERE 조건;
	    조건을 1=0으로 주면 구조만 동일한 빈 테이블이 생성

 - 서브쿼리로 데이터 삽입하기
   · INSERT INTO 복제테이블명 SELECT * FROM 원본테이블명 WHERE 조건;

select * from member where age >= (select avg(age) from member)

